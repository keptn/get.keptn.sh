language: bash
sudo: true


jobs:
  include:
  # cron: always test that get.keptn.sh works on linux
  - stage: cron linux
    os: linux
    if: type = cron
    script:
    # first validate that get.keptn.sh hosts the same file as in the current src folder
    - curl -L https://get.keptn.sh --output get.sh
    - diff get.sh src/get.sh || travis_terminate 1
    # then validate that installing works as expected
    - curl -sL https://get.keptn.sh | sudo -E bash
    - keptn version
    
    
  # cron: always test that get.keptn.sh works on osx
  - os: osx
    stage: cron osx
    if: type = cron
    script:
    - curl -sL https://get.keptn.sh | sudo -E bash
    - keptn version

  # any change in this repo: check if get.sh works on linux
  - stage: test linux
    os: linux
    script:
    # get the content of get.sh and pipe it into a sudo bash (same as if we would call curl)
    - cat src/get.sh | sudo -E bash
    - keptn version

  # any change in this repo: check if get.sh works on osx
  - stage: test osx
    os: osx
    script:
    # get the content of get.sh and pipe it into a sudo bash (same as if we would call curl)
    - cat src/get.sh | sudo -E bash
    - keptn version

  # if anything gets pushed to master we want to update our S3 bucket
  - stage: push to s3
    if: branch = master AND NOT type = pull_request
    os: linux
    script:
      # ensure only two files exist in src folder
      - NUM_FILES=$(ls -1 src/ | wc -l)
      - |
        if [ $NUM_FILES -ne 2 ]; then
          echo "Unexpected files found in src/ folder"
          ls -la src/
          travis_terminate 1
        fi
      - cat src/get.sh || travis_terminate 1
      - cat src/version.json || travis_terminate 1
    deploy:
      provider: s3
      # we will only deploy files from the src folder
      local_dir: src
      access_key_id: "$AWS_ACCESS_KEY"
      secret_access_key: "$AWS_SECRET"
      bucket: "get.keptn.sh"
